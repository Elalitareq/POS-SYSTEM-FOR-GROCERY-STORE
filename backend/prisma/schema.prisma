generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int       @id @default(autoincrement())
  userName     String    @unique
  password     String
  role         Role
  actions      Action[]
  products     Product[]
  batches      Batch[]
  lastModified DateTime  @default(now())
}

enum Role {
  SUPERADMIN
  ADMIN
  EMPLOYEE
}

model Product {
  id                Int                 @id @default(autoincrement())
  name              String
  description       String?
  sku               String              @unique
  categoryID        Int?
  inventoryCount    Int                 @default(0)
  soldCount         Int                 @default(0)
  regularPrice      Float
  salePrice         Float?
  wholesalePrice    Float?
  costPrice         Float
  batches           Batch[]
  lastModified      DateTime            @default(now())
  addedBy           User?               @relation(fields: [userId], references: [id])
  userId            Int?
  Category          Category?           @relation(fields: [categoryId], references: [id])
  categoryId        Int?
  TransactionDetail TransactionDetail[]
}

model Batch {
  id           Int      @id @default(autoincrement())
  product      Product  @relation(fields: [productId], references: [id])
  productId    Int
  receivedDate DateTime
  expiryDate   DateTime
  quantity     Int
  costPrice    Float
  addedBy      User?    @relation(fields: [userId], references: [id])
  userId       Int?
  lastModified DateTime @default(now())
}

model Category {
  id           Int       @id @default(autoincrement())
  name         String
  description  String?
  products     Product[]
  lastModified DateTime  @default(now())
}

enum SaleType {
  WHOLESALE
  REGULAR
}

model Transaction {
  id           Int                 @id @default(autoincrement())
  date         DateTime            @default(now())
  totalAmount  Float
  saleType     SaleType
  details      TransactionDetail[]
  lastModified DateTime            @default(now())
}

model TransactionDetail {
  id                Int         @id @default(autoincrement())
  transactionId     Int
  transaction       Transaction @relation(fields: [transactionId], references: [id])
  productId         Int
  product           Product     @relation(fields: [productId], references: [id])
  quantity          Int
  priceAtTimeOfSale Float
  lastModified      DateTime    @default(now())
}

model Action {
  id           Int      @id @default(autoincrement())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  userId       Int
  user         User?    @relation(fields: [userId], references: [id])
  title        String?
  description  Json
  actionType   String // For example, "CREATE", "UPDATE", "DELETE"
  lastModified DateTime @default(now())
}
